/*-- scss:rules --*/

.theorem:not(.exercise):not(.example) {
    display: block;
    padding-top: 1em;
    padding-left: 0.5em;
    border: 1px solid $gray-800;
    background-color: $gray-400;
}

/* Game tables */
.game td, .game1 td, .gamemin td {
  padding-top: 0.25em;
  padding-bottom: 0.25em;
}

.game td, .gamemin td {
  text-align: right;
}

.game1 td {
  text-align: center;
}

.game1 tr > td:first-child {
  padding-right: 0.5em;
}

.gamemin tr:first-child > td:last-child {
}

.gamemin tr:not(:first-child) > td:last-child {
  text-align:right;
  padding-right: 3em;
}

.game  tr:not(:nth-of-type(1)) > td:not(:nth-of-type(1)),
.gamemin  tr:not(:nth-of-type(1)) > td:not(:nth-of-type(1)),
.game1 tr:not(:nth-of-type(1)) > td:not(:nth-of-type(1)) {
  border-bottom: 1px solid;
}

.game tr:not(:nth-of-type(1)) > td:nth-of-type(1),
.gamemin tr:not(:nth-of-type(1)) > td:nth-of-type(1),
.game1 tr:not(:nth-of-type(1)) > td:nth-of-type(1) {
  border-right : 1px solid ;
}


.game tr:not(:nth-of-type(1)) > td:nth-of-type(2n),
.gamemin tr:not(:nth-of-type(1)) > td:nth-of-type(2n),
{
  padding-left: 1em;
  border-left: 1px solid;
}

.game1 tr:not(:nth-of-type(1)) > td:not(:nth-of-type(1)) {
  padding-left: 0.5em;
  padding-right: 0.5em;
  border-left: 1px solid;
}

.game tr:not(:nth-of-type(1)) > td:nth-of-type(2n+1),
.gamemin tr:not(:nth-of-type(1)) > td:nth-of-type(2n+1),
{
  padding-right: 1em;
}

.game tr:not(:nth-of-type(1)) > td:nth-of-type(2n):after,
.gamemin tr:not(:nth-of-type(1)):not(:last-child) > td:nth-of-type(2n):not(:last-child):after,
{
  content: ', ';
}

.game tr:not(:nth-of-type(1)) > td:nth-last-of-type(1),
.gamemin tr:not(:nth-of-type(1)) > td:nth-last-of-type(1),
.game1 tr:not(:nth-of-type(1)) > td:nth-last-of-type(1) {
  border-right : 1px solid ;
}

.game tr:nth-of-type(1) > td:not(:nth-of-type(1)),
.gamemin tr:nth-of-type(1) > td:not(:nth-of-type(1)),
.game1 tr:nth-of-type(1) > td:not(:nth-of-type(1)) {
  text-align: center;
  padding-left: 1em;
  border-bottom : 1px solid ;
}

.game tr:nth-last-of-type(1) > td:not(:nth-of-type(1)),
.gamemin tr:nth-last-of-type(1) > td:not(:nth-of-type(1)),
.game1 tr:nth-last-of-type(1) > td:not(:nth-of-type(1)) {
  border-bottom : 1px solid ;
}


.game, .game1, .gamemin {
  border-collapse: collapse;
  border: none;
}

.gamemin tr:not(:first-child):not(:last-child) td:last-child {
  background-color: #90ee90;
}

.gamemin tr:last-child td:not(:first-child) {
  background-color: #90ee90;
}

.gamemin tr:last-child td:last-child {
  background-color: #eeee90;
}


// Copied from https://github.com/quarto-dev/quarto-web/blob/386ce1f654644a9db8134770c5312fe2b3c3b6b4/styles.css#L143
@media (max-width: 575px) {

.link-cards .card {
  margin-bottom: 20px;
  margin-right: 35px;
}

}

@media (min-width: 576px) { 
.link-cards {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.link-cards .card {
  width: 250px; // was 190px
  margin: 0 20px 12px 0;
}


}


.link-cards .card {
  border: none;
  padding: 0;
}

.link-cards .card-title h4 {
  margin-top: 0;
}

.link-cards .card-title p {
  margin-bottom: 0;
}

.link-cards .card-subtitle {
  margin-bottom: 0.7rem;
}

.link-cards .card-body {
  padding: 0.5rem;
  padding-left: 0.1rem;
}

.link-cards .card-body ul {
  margin-bottom: 0;
  padding-left: 1em; // was 0
  list-style-type: circle; //was none
}

.link-cards .card-body ul a {
  text-decoration: none;
}

.link-cards .card-body ul li {
  padding-bottom: 0.2rem;
}


.card .source-code {
  margin-top: 3px;
}

svg { 
  display: block;
  background: white;
  border:1px solid; 
  padding: 5px;
}

// Copied from: https://stackoverflow.com/a/38811507/193149
/* Flip the vertical axis in <g> to emulate cartesian. */
svg.cartesian > g {
  transform: scaleY(-1);
}

/* Re-flip all <text> element descendants to their original side up. */
svg.cartesian > g text {
  transform: scaleY(-1);
}

svg.cartesian > g foreignObject {
  transform: scaleY(-1);
}
